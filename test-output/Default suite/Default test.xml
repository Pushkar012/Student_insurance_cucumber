<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LTIN513868" failures="0" tests="12" name="Default test" time="0.07" errors="0" timestamp="2024-02-28T23:05:51 IST">
  <testcase classname="com.base.com.Driver" name="@BeforeClass setup" time="0.007">
    <failure type="java.io.FileNotFoundException" message="C:\Users\2304095\eclipse-workspace\Student_insurance_Project_cucumber\src\test\resources\TestData\config.properties (The system cannot find the file specified)">
      <![CDATA[java.io.FileNotFoundException: C:\Users\2304095\eclipse-workspace\Student_insurance_Project_cucumber\src\test\resources\TestData\config.properties (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
at java.base/java.io.FileReader.<init>(FileReader.java:60)
at com.base.com.Driver.setup(Driver.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@BeforeClass setUp" time="-1.709141751503E9">
    <skipped/>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751515E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.70914175152E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751522E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751524E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751527E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.70914175153E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751531E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751533E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751535E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751537E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751539E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterMethod afterMethod" time="-1.709141751542E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="@AfterClass tearDown" time="-1.709141751544E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="testTravelInsuranceButtonClick" time="0.0">
    <skipped/>
  </testcase> <!-- testTravelInsuranceButtonClick -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="testSwitchToChildWindow" time="0.0">
    <skipped/>
  </testcase> <!-- testSwitchToChildWindow -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="SelectDestination" time="0.0">
    <skipped/>
  </testcase> <!-- SelectDestination -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="testSelectDate" time="0.0">
    <skipped/>
  </testcase> <!-- testSelectDate -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="testSelectNumberOfTravellers" time="0.0">
    <skipped/>
  </testcase> <!-- testSelectNumberOfTravellers -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="ViewPlan" time="0.0">
    <skipped/>
  </testcase> <!-- ViewPlan -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="SelectingStudentTrip" time="0.0">
    <skipped/>
  </testcase> <!-- SelectingStudentTrip -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="InsuranceData" time="0.0">
    <skipped/>
  </testcase> <!-- InsuranceData -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="SwitchChild" time="0.0">
    <skipped/>
  </testcase> <!-- SwitchChild -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="CarInsurance" time="0.0">
    <skipped/>
  </testcase> <!-- CarInsurance -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="fillingForm" time="0.0">
    <skipped/>
  </testcase> <!-- fillingForm -->
  <testcase classname="policyBazaar.test.TravelInsuranceTest" name="HealthInsurance" time="0.0">
    <skipped/>
  </testcase> <!-- HealthInsurance -->
</testsuite> <!-- Default test -->
